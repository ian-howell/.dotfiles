# Turn on convenient colors
autoload -U colors && colors

# Allow proper substitution in the prompt
setopt PROMPT_SUBST

# Save the history
SAVEHIST=1000000
HISTFILE=$HOME/.zsh_history

#===[ Functions
# Outputs current branch info in prompt format
function git_prompt_info() {
  local ref
  ref=$(command git symbolic-ref HEAD 2> /dev/null) || \
  ref=$(command git rev-parse --short HEAD 2> /dev/null) || return 0
  local prefix suffix
  prefix="%{$fg_bold[blue]%}git:(%{$fg[red]%}"
  suffix="%{$reset_color%} "
  echo "$prefix${ref#refs/heads/}$(parse_git_dirty)$suffix"
}

# Checks if working tree is dirty
function parse_git_dirty() {
  local STATUS=''
  local -a FLAGS
  local dirty clean
  dirty="%{$fg[blue]%}) %{$fg[yellow]%}✗"
  clean="%{$fg[blue]%})"
  FLAGS=('--porcelain')
  FLAGS+='--ignore-submodules=dirty'
  STATUS=$(command git status ${FLAGS} 2> /dev/null | tail -n1)
  if [[ -n $STATUS ]]; then
    echo "$dirty"
  else
    echo "$clean"
  fi
}

function vi_mode_prompt_info() {
  local mode_indicator="%{$fg_bold[magenta]%}(cmd)%{$reset_color%}"
  echo "${${KEYMAP/vicmd/$mode_indicator}/(main|viins)/}"
}
#===]
#===[ Prompt
ret_status="%(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )"
PROMPT='${ret_status} %{$fg[cyan]%}%c%{$reset_color%} $(git_prompt_info)'
RPS1='$(vi_mode_prompt_info)'
#===]
#===[ Vim
# Updates editor information when the keymap changes.
function zle-keymap-select() {
  zle reset-prompt
  zle -R
}

# Ensure that the prompt is redrawn when the terminal size changes.
TRAPWINCH() {
  zle && { zle -R; zle reset-prompt }
}

zle -N zle-keymap-select
zle -N edit-command-line

# turn on vi-mode
bindkey -v

# allow v to edit the command line (standard behaviour)
autoload -Uz edit-command-line
bindkey -M vicmd 'v' edit-command-line

# allow ctrl-p, ctrl-n for navigate history (standard behaviour)
bindkey '^P' up-history
bindkey '^N' down-history

# allow ctrl-h, ctrl-w, ctrl-? for char and word deletion (standard behaviour)
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word

# allow ctrl-r to perform backward search in history
bindkey '^r' history-incremental-search-backward

# allow ctrl-a and ctrl-e to move to beginning/end of line
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line

# make mode transitions faster (KEYTIMEOUT is in hundredths of a second)
export KEYTIMEOUT=1
#===]

# add custom completionos to the function path
fpath=($ZSH/functions $ZSH/completions $fpath)
# load stock functions
autoload -U compaudit compinit

source ~/.sh_aliases

# zsh's backword menu complete is different from readline's for some reason
bindkey '^[[Z' reverse-menu-complete

# Setup default editor
export EDITOR='vim'
export VISUAL='vim'

# My personal bin
[[ -d $HOME/bin ]] && export PATH="$HOME/bin:$PATH"

# My custom functions
[[ -f $HOME/.funcs ]] && source $HOME/.funcs

# colors for man
export LESS_TERMCAP_mb=$'\e[1;31m'     # begin bold
export LESS_TERMCAP_md=$'\e[1;33m'     # begin blink
export LESS_TERMCAP_so=$'\e[01;44;37m' # begin reverse video
export LESS_TERMCAP_us=$'\e[01;37m'    # begin underline
export LESS_TERMCAP_me=$'\e[0m'        # reset bold/blink
export LESS_TERMCAP_se=$'\e[0m'        # reset reverse video
export LESS_TERMCAP_ue=$'\e[0m'        # reset underline
export MANPAGER='less -s -M +Gg'       # percentage into the document

unsetopt share_history
setopt no_share_history

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPS="--extended"
export FZF_DEFAULT_COMMAND="fd --type f"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

[[ -f "$HOME/.dotfiles/localrc" ]] && source $HOME/.dotfiles/localrc

fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    fg
  else
    bg
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

type helm > /dev/null && source <(helm completion zsh)
type kubectl > /dev/null && source <(kubectl completion zsh)
# vim:foldmethod=marker:foldlevel=0:foldmarker====[,===]
