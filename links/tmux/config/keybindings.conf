# Using Tmux Copy mode:
#
# Enter the copy-mode: prefix [
# Navigate: h, j, k, l, w, W, b, B, {, }
# Search: ?, /
# Start highlight: v
# Yank the highlighted text: Enter
# Paste: prefix ]

###############################################################################
# Key Bindings
###############################################################################
# NOTE: As a general "cleanliness" rule, prefer 'bind' to 'bind-key'

# Unset default prefix
unbind C-b
unbind C-a

# Set Prefix to Ctrl+space
set -g prefix C-space
bind C-space send-prefix

# Create a new session
bind-key S command-prompt -p "Session name:" "new-session -s '%%'"
# Switch to an existing (or pre-defined) session
bind-key s run-shell "tmux-sessionizer"
# Switch to the last session
bind-key l switch-client -l

# Split panes using \ and - (\ because it doesn't require shift)
# Start in same directory when splitting windows
bind \\ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Switch to the most recently used window.
bind C-Space last-window

# When creating a window, start at the same path
bind c new-window -c '#{pane_current_path}'

# Open a new 15-row tall window with the purpose of being a "terminal".
bind t split-window -c "#{pane_current_path}" -l 15

# Sane window switching
unbind .
bind m command-prompt -p "Move to index:" "run-shell 'tx-insert-window %%'"

# Switch Pane positions
bind -n M-[ swap-pane -D
bind -n M-] swap-pane -U

# Use vim keybindings in copy mode
set -g mode-keys vi

# TODO: why not make 'v' just cycle through different selection types?
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle

# TODO: revisit this when you work out clipboard shenanigans
# Easier access to the paster-buffer
bind P paste-buffer
# Copy to clipboard
# TODO: old stuff. Compare to the new stuff below
# bind -T copy-mode-vi 'y' send-keys -X copy-pipe "xclip -sel clip -i"
# # Change default behavior of Enter to match 'y'
# bind -T copy-mode-vi Enter send-keys -X copy-pipe "xclip -sel clip -i"
# TODO: this won't work because it's meant for macs...
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'

# vi-like searching. These (1) switch to copy-mode then (2) begin searching
bind / copy-mode -e \; send-keys '/'
bind ? copy-mode -e \; send-keys '?'

# These (1) switch to copy-mode then (2) scroll up
bind C-y copy-mode \; send-keys -X scroll-up
bind C-u copy-mode \; send-keys -X halfpage-up
bind C-b copy-mode \; send-keys -X page-up

# Reload config file
bind r source-file ~/.config/tmux/tmux.conf \; display '~/.config/tmux/tmux.conf sourced'

# Shortcuts to dotfiles
bind T new-window "cd ~/.dotfiles; nvim ./links/tmux/tmux.conf"
bind V new-window "cd ~/.dotfiles; nvim ./links/nvim/init.lua"
bind Z new-window "cd ~/.dotfiles; nvim ./links/zshrc"
bind D new-window "sesh connect dotfiles"

# Quickly detach from session
bind C-d detach

# LazyGit
bind g new-window -c '#{pane_current_path}' "lazygit"
# Opencode
bind o new-window -c '#{pane_current_path}' "opencode"

###############################################################################
# Tmux Nagivator - https://github.com/christoomey/vim-tmux-navigator
###############################################################################

# Check if the current pane is a vim or lazygit pane
# NOTE: There is no lazygit-tmux-navigator plugin, so I won't be able to leave the
# lazygit window, but that's ok because lazygit will generally have a dedicated window.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_lg="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?lazygit$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h if-shell "$is_vim || $is_lg || $is_fzf" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim || $is_lg || $is_fzf" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim || $is_lg || $is_fzf" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim || $is_lg || $is_fzf" "send-keys C-l" "select-pane -R"

bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R

###############################################################################
# Popup keymaps
###############################################################################

bind w display-popup -d '#{pane_current_path}' -w 91% -h 90% -E -b "rounded"
bind h display-popup -w 90% -h 90% -E -b "rounded" "htop"
