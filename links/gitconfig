[alias]
	clean-branches = clean-branches
        accuse = blame -w -M -C -C -C
[branch]
	sort = -committerdate
[color]
	ui = true
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "diff"]
	meta = 11
	frag = magenta bold
	func = 146 bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
[column]
	ui = auto
[commit]
	verbose = true
[core]
	editor = nvim
	excludesfile = ~/.dotfiles/links/global_gitignore
	pager = delta
[delta]
	navigate = true	# use n and N to move between diff sections
	side-by-side = true
	line-numbers = true
[delta "interactive"]
	keep-plus-minus-markers = false
[diff]
	algorithm = histogram
	# Show code movement in different colors then added and removed lines
	colorMoved = plain
	# Detect renames
	renames = true
	# Replace the a/ and b/ in the diff header output with where the diff is
	# coming from, so i/ (index), w/ (working directory) or c/ commit.
	mnemonicPrefix = true
[fetch]
	# If the remote branch was deleted, delete the local branch as well
        prune = true
	# Same as above, but for tags
        pruneTags = true
[help]
	# Allow git to fix my spelling.
        autocorrect = prompt
[include]
	path = ~/.dotfiles/local_gitconfig
	path = ~/.dotfiles/links/delta/tokyonigh_storm.gitconfig
	path = ~/.config/work/.gitconfig
[init]
	defaultBranch = main
[interactive]
	diffFilter = delta --color-only --features=interactive
[merge]
	# Include the base when showing mrerge conflicts
	conflictstyle = diff3
	tool = nvim
[mergetool "nvim"]
	cmd = nvim -d $LOCAL $MERGED $REMOTE
[pull]
	# Make `git pull` perform a rebase rather than a merge
	rebase = true
[push]
	# pushes the current branch to the same name on the remote. Old defaults
	# used to push *all* branches, which is psychotic. We'll be explicit
	# here because *sheeeeesh*
	default = simple
	# If the upstream is not set, automatically set it
	autoSetupRemote = true
	# push all local tags that arenâ€™t on the server, every time you push
	followTags = true
[rebase]
	# Automatically squash commits that start with "fixup!"
	autoSquash = true
	# Automatically stash any uncommitted changes prior to rebasing and pop
	# them after the rebase is complete
	autoStash = true
	# Make sure stacked refs are moved when a branch is rebased. This is
	# *extremely* useful for stacked PRs. Unfortunately, this needs a newer
	# version of git (>=2.38) than is provided in Ubuntu 22.04 LTS, so won't
	# be useful to me until I upgrade
	updateRefs = true
[remote.origin]
	# Only push the current branch
	push = HEAD
[rerere]
        # REuse REcorded Resolution causes git to "remember" how to address a
        # given conflict. When git encounters a conflict that it has already
        # seen, it will automatically use the same resolution as before.
        enabled = true
	# Automatically re-apply the resolutions if they're seen again
	autoupdate = true
[tag]
	# treat dotted version numbers as a series of integer values for sorting
	# purposes
        sort = version:refname
[user]
	email = ian.howell0@gmail.com
	name = Ian Howell

[credential "azrepos:org/msazuredev"]
	azureAuthority = https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47
	username = ianhowell@microsoft.com
[credential "azrepos:org/mariner-org"]
	azureAuthority = https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47
	username = ianhowell@microsoft.com
